server {
    listen   80;
    server_name dockertest.lab;

    add_header Strict-Transport-Security max-age=15768000;
    return 301 https://$server_name$request_uri;
}


server {
    listen   443 ssl http2 default_server;
    listen   [::]:443 ssl http2 default_server;
    server_name dockertest.lab;

    ssl on;
    ssl_certificate        /etc/nginx/certs/default.pem;
    ssl_certificate_key    /etc/nginx/certs/default.key;

    # http2 and tls 1.3
    # 配置赫尔曼密钥
    ssl_dhparam            /etc/nginx/certs/dhparam.pem;
    # 禁止不安全的 SSL 协议，使用安全协议
    ssl_protocols          TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    # 禁止已经不安全的加密算法
    ssl_ciphers            'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4';
    ssl_ecdh_curve          secp384r1;
    # 缓解 BEAST 攻击
    ssl_prefer_server_ciphers on;
    # 缓存连接凭据
    ssl_session_cache         shared:SSL:20m;
    ssl_session_timeout       60m;
    

    root /www/htdocs;
    index index.php index.html;
    location / {
        try_files $uri $uri/ /index.html;
    }

    location ~ \.php {
        include fastcgi_params;
        fastcgi_pass   php:9000;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    }
}